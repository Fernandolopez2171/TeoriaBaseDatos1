/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Mantenimiento;

import PostgreSQL.conexion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyecto.Usuario;
import proyecto.VistaAdmin;

/**
 *
 * @author AxelM
 */
public class MantenimientoUser extends javax.swing.JFrame {

    /**
     * Creates new form CREARUSER
     */
    public MantenimientoUser() {
        initComponents();
        this.getContentPane().setBackground(Color.ORANGE);
        this.setLocationRelativeTo(null);
        Actualizar();
    }
    DefaultTableModel modelo;
    String info[] = new String[4];
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TIPOBOX = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPass = new javax.swing.JTextField();
        txtIdCliente = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtIdUser = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        jButton4.setText("MODIFICAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("TABLA USUARIO");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Password:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("ID Cliente:");

        TIPOBOX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Cliente", "Transportista", "Empleado", " " }));
        TIPOBOX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TIPOBOXActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("TIPO:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("DATOS GENERALES");

        txtPass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });

        txtIdCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdClienteActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("ID User:");

        txtIdUser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("REGRESAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("CREAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("MODIFICAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("ELIMINAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(TIPOBOX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jLabel6)))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel6)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(TIPOBOX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3)
                            .addComponent(jButton5))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TIPOBOXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TIPOBOXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TIPOBOXActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void txtIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdClienteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Crear
        String IdUser = txtIdUser.getText();
        String Pass = txtPass.getText();
        String IdCliente = txtIdCliente.getText();
        String Tipo = TIPOBOX.getSelectedItem().toString();
        
        if(IdUser.equals("")||Pass.equals("")||IdCliente.equals("")||Tipo.equals("")){
             JOptionPane.showMessageDialog(null, "Falta ingresar un dato");
        }else{
            conexion consulta = new conexion();
            String sql;
            sql="INSERT INTO \"Usuarios\"(\"IDUser\",\"Password\",\"Tipo\",\"Id_Cliente\")VALUES('"+IdUser+"','"+Pass+"','"+Tipo+"','"+IdCliente+"')";
            consulta.ejecutarSQL(sql);
            //limpia los textbox
            lim();
            //limpia el Jtable
            limpiar();
            //Actualiza el Jtable con la base de datos
            Actualizar();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //editar
        String IdUser = txtIdUser.getText();
        String Pass = txtPass.getText();
        String IdCliente = txtIdCliente.getText();
        String Tipo = TIPOBOX.getSelectedItem().toString();
          ResultSet resultado;
        String validarIdUser;
        String validarPass;
        String validarTipo="";
        String validarIDCliente;
        if(IdUser.equals("")||Pass.equals("")||IdCliente.equals("")||Tipo.equals("")){
             JOptionPane.showMessageDialog(null, "Falta ingresar un dato");
        }else{
            try {
               resultado=consultarUsuario(IdUser);
               //Extraer los datos para la validacion de tipo
               while(resultado.next()){
               validarIdUser=resultado.getString("IDUser");
               validarPass=resultado.getString("Password");
               validarTipo=resultado.getString("Tipo");
               validarIDCliente = resultado.getString("Id_Cliente");
               }
               
                    if(Tipo.equals(validarTipo)){
                    conexion consulta = new conexion();
                    String sql;
                    sql = "Update \"Usuarios\" set \"IDUser\"='"+IdUser+"',\"Password\"='"+Pass+"',\"Tipo\"='"+Tipo+"',\"Id_Cliente\"="+IdCliente+" WHERE \"IDUser\"='"+IdUser+"'";
                    consulta.ejecutarSQL(sql);
                    lim();
                    limpiar();
                    Actualizar();
                    }else{
                    JOptionPane.showMessageDialog(null, "Error!");
                    }
            } catch (Exception ex) {
                Logger.getLogger(MantenimientoUser.class.getName()).log(Level.SEVERE, null, ex);
            }
          
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //eliminar
        String IdUser = txtIdUser.getText();
        String Tipo = TIPOBOX.getSelectedItem().toString();
        ResultSet resultado;
        String validarIdUser;
        String validarPass;
        String validarTipo="";
        String validarIDCliente;
         if(IdUser.equals("")||Tipo.equals("")){
             JOptionPane.showMessageDialog(null, "Falta ingresar un dato");
        }else{
            try {
               resultado=consultarUsuario(IdUser);
               //Extraer los datos para la validacion de tipo
               while(resultado.next()){
               validarIdUser=resultado.getString("IDUser");
               validarPass=resultado.getString("Password");
               validarTipo=resultado.getString("Tipo");
               validarIDCliente = resultado.getString("Id_Cliente");
               System.out.println(validarTipo);
               }
               
                    if(Tipo.equals(validarTipo)){
                    conexion consulta = new conexion();
                    String sql;
                    sql="DELETE FROM \"Usuarios\" WHERE \"IDUser\"='"+IdUser+"'";
                    consulta.ejecutarSQL(sql);
                    lim();
                    limpiar();
                    Actualizar();
                    }else{
                    JOptionPane.showMessageDialog(null, "Error!");
                    }
            } catch (Exception ex) {
                Logger.getLogger(MantenimientoUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        VistaAdmin ad = new VistaAdmin();
        ad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    public void lim(){
        txtIdUser.setText("");
        txtPass.setText("");
        txtIdCliente.setText("");
    }
        
    public void Actualizar(){
       String validarIdUser;
       String validarPass;
       String validarTipo;
       String validarIDCliente;
       ResultSet resultado;
       
       modelo = new DefaultTableModel();
       modelo.addColumn("ID_User");
       modelo.addColumn("Password");
       modelo.addColumn("Tipo");
       modelo.addColumn("ID_Cliente");
       
        try {
            //Extraer los datos SQL
            resultado = consultarDB();
            while(resultado.next()){
               validarIdUser=resultado.getString("IDUser");
               validarPass=resultado.getString("Password");
               validarTipo=resultado.getString("Tipo");
               validarIDCliente = resultado.getString("Id_Cliente");
               lista(validarIdUser,validarPass,validarTipo,validarIDCliente);
             }             
        }catch (Exception ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public ResultSet consultarDB() throws Exception{
        conexion sql= new conexion();
        Connection data = sql.conectar();
        ResultSet resultado;
        Statement sentencia = null;
        try{
           String Consulta ="SELECT * FROM \"Usuarios\"";  
           sentencia = data.createStatement();
           resultado = sentencia.executeQuery(Consulta);
           return resultado;
        }catch(Exception e){
            throw new Exception("Error al consultar DB");
        }finally{
        }
    }
     public ResultSet consultarUsuario(String us) throws Exception{
        conexion sql= new conexion();
        Connection data = sql.conectar();
        ResultSet resultado;
        Statement sentencia = null;
        try{
           String Consulta ="SELECT * FROM \"Usuarios\" Where \"IDUser\"='"+us+"'";  
           sentencia = data.createStatement();
           resultado = sentencia.executeQuery(Consulta);
           
           return resultado;
        }catch(Exception e){
            throw new Exception("Error al consultar DB");
        }finally{
        }
    }
   public void lista(String id,String pass, String tipo, String cliente) {
        this.tabla.setModel(modelo);
            info[0] =id;
            info[1] = pass;
            info[2] = tipo;
            info[3] = cliente;
            //SE LE AGREGA LA FILA A LA TABLA
            modelo.addRow(info);    
    }
    public void limpiar(){
        modelo=(DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
    }
    
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MantenimientoUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> TIPOBOX;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtIdUser;
    private javax.swing.JTextField txtPass;
    // End of variables declaration//GEN-END:variables
}
