/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package REPORTES;

import ConsultasReportes.ConsultaRe;
import Mantenimiento.MantenimientoTransport;
import java.awt.Color;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyecto.Usuario;
import proyecto.VistaAdmin;

/**
 *
 * @author AxelM
 */
public class ACCIDENTE extends javax.swing.JFrame {

      DefaultTableModel modelo;
      String info[] = new String[5];
    /**
     * Creates new form CREARUSER
     */
    public ACCIDENTE() {
        initComponents();
        this.getContentPane().setBackground(Color.ORANGE);
        llenarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        comboCon = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        jButton4.setText("MODIFICAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("REGRESAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("REPORTES");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        comboCon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Encuentre todos los clientes que tenían un paquete en ese camión en el momento del accidente. ", "Encuentre todos los destinatarios que tenían un paquete en ese camión en el momento del accidente.", "Encuentre la última entrega exitosa de ese camión antes del accidente.", "Encuentre el cliente que envió la mayor cantidad de paquetes en el último año.", "Encuentre el cliente que ha gastado más dinero en envíos durante el último año.", "Encuentra la calle con más clientes.", "Encuentra aquellos paquetes que no fueron entregados en el tiempo prometido." }));

        jButton1.setText("Consulta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("ID Transporte:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(comboCon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 18, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(comboCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           VistaAdmin ad = new VistaAdmin();
           ad.setVisible(true);
           this.dispose();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ConsultaRe s = new ConsultaRe();
        String transporte = jComboBox1.getSelectedItem().toString();
        int op = comboCon.getSelectedIndex();
       
        ResultSet resultado;
        if(transporte.equals("")){
            JOptionPane.showMessageDialog(null, "Falta ingresar un dato");
        }else{
         if(op==0){
            limpiar();
             try {
                 s.Vista0(transporte);
                 resultado= s.v0();
                 llenarVista0(resultado);
             } catch (Exception ex) {
                 Logger.getLogger(ACCIDENTE.class.getName()).log(Level.SEVERE, null, ex);
             }
         }else if(op==1){
              limpiar();
             try {
                 s.Vista1(transporte);
                 resultado= s.v1();
                 llenarVista1(resultado);
             } catch (Exception ex) {
                 Logger.getLogger(ACCIDENTE.class.getName()).log(Level.SEVERE, null, ex);
             }
         }else if(op==2){
              limpiar();
             try {
                 s.Vista2(transporte);
                 resultado= s.v2();
                 llenarVista2(resultado);
             } catch (Exception ex) {
                 Logger.getLogger(ACCIDENTE.class.getName()).log(Level.SEVERE, null, ex);
             }
         }else if(op==3){
             limpiar();
             int nuevo=0;
             int anterior=0;
             int res=0;
             ResultSet resultado2;
             String defU="";
             String defH="";
             String h2="";
             String u2="";
             modelo = new DefaultTableModel();
             modelo.addColumn("IDUser");
             modelo.addColumn("Año");
             try {
                 s.Vista3("2022");
                 resultado= s.v3();     
               while(resultado.next()){ 
               String u = resultado.getString("IDUser");     
               String h = resultado.getString("Año");
               resultado2= s.v3igual(u);
               nuevo=0;
               while(resultado2.next()){
                    u2 = resultado2.getString("IDUser");     
                    h2 = resultado2.getString("Año");
                    nuevo=nuevo+1;
               }
               res=Mayor(anterior,nuevo);
               anterior=nuevo;
               if(nuevo==res){
                   defU = u2;
                   defH=h2;
               }    
             }
            this.tabla.setModel(modelo);
            info[0] = defU;
            info[1] = defH;
            //SE LE AGREGA LA FILA A LA TABLA
            modelo.addRow(info);  
                
             } catch (Exception ex) {
                 Logger.getLogger(ACCIDENTE.class.getName()).log(Level.SEVERE, null, ex);
             }
         }else if(op==4){
             limpiar();
             int nuevo=0;
             int anterior=0;
             int res=0;
             ResultSet resultado2;
             
             String defU="";
             String defM="";
             
             String u2="";
             String m2="";
             
             modelo = new DefaultTableModel();
             modelo.addColumn("IDUser");
             modelo.addColumn("Precio Total");
             
            try {
                 s.Vista4("2022");
                 resultado= s.v4();     
               while(resultado.next()){ 
               String u = resultado.getString("IDUser");     
               String m = resultado.getString("Precio");
               resultado2= s.v4igual(u);
               nuevo=0;
               while(resultado2.next()){
                    u2 = resultado2.getString("IDUser");     
                    m2 = resultado2.getString("Precio");
                    int o = Integer.parseInt(m2);
                    nuevo=nuevo+o;
               }
               res=Mayor(anterior,nuevo);
               anterior=nuevo;
               if(nuevo==res){
                   defU = u2;
                   defM=String.valueOf(nuevo);
               }    
             }
            this.tabla.setModel(modelo);
            info[0] = defU;
            info[1] = defM;
            //SE LE AGREGA LA FILA A LA TABLA
            modelo.addRow(info);  
                
             } catch (Exception ex) {
                 Logger.getLogger(ACCIDENTE.class.getName()).log(Level.SEVERE, null, ex);
             }
             
         }else if(op==5){
             JOptionPane.showMessageDialog(null, "Error!");
         }else if(op==6){
             JOptionPane.showMessageDialog(null, "Error!");
         }
       }
    }//GEN-LAST:event_jButton1ActionPerformed
//Consultas extra----------------------
    public void llenarVista0(ResultSet resultado){
        String validarUser;
        String validarTransporte;
        String Estado;
        String Paquete;
            modelo = new DefaultTableModel();
            modelo.addColumn("IDUser");
            modelo.addColumn("ID_Transporte");
            modelo.addColumn("Estado");
            modelo.addColumn("IdPaquete");
             try {
            //Extraer los datos SQL
            while(resultado.next()){
               validarUser=resultado.getString("IDUser");
               validarTransporte=resultado.getString("ID_Transporte");
               Estado=resultado.getString("Estado");
               Paquete = resultado.getString("IdPaquete");
               listaVista0(validarUser,validarTransporte,Estado,Paquete);
             }             
        }catch (Exception ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    //Limpia todo el Jtable
    public void limpiar(){
        modelo=(DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
    }
    public void listaVista0(String validarUser,String validarTransporte,String Estado,String Paquete) {
        this.tabla.setModel(modelo);
            info[0] = validarUser;
            info[1] = validarTransporte;
            info[2] = Estado;
            info[3] = Paquete;
            //SE LE AGREGA LA FILA A LA TABLA
            modelo.addRow(info);    
    }
    public void llenarVista1(ResultSet resultado){
        String validarDir;
        String validarTransporte;
        String Estado;
        String Paquete;
            modelo = new DefaultTableModel();
            modelo.addColumn("DireccionFinal");
            modelo.addColumn("ID_Transporte");
            modelo.addColumn("Estado");
            modelo.addColumn("ID_Paquete");
             try {
            //Extraer los datos SQL
            
            while(resultado.next()){
               validarDir=resultado.getString("DireccionFinal");
               validarTransporte=resultado.getString("ID_Transporte");
               Estado=resultado.getString("Estado");
               Paquete = resultado.getString("IDPaquete");
               listaVista1(validarDir,validarTransporte,Estado,Paquete);
             }             
        }catch (Exception ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void listaVista1(String validarDir,String validarTransporte,String Estado,String Paquete) {
        this.tabla.setModel(modelo);
            info[0] = validarDir;
            info[1] = validarTransporte;
            info[2] = Estado;
            info[3] = Paquete;
            //SE LE AGREGA LA FILA A LA TABLA
            modelo.addRow(info);    
    } 
    public void llenarCombo(){
       String validarId;
       String validarTipo;
       String validarEstado;
       String validarDireccion;
       String validarUser;

       ResultSet resultado;
       MantenimientoTransport a = new  MantenimientoTransport();
       try{
        resultado= a.consultarDB();
        while(resultado.next()){
               validarId=resultado.getString("Id_Transporte");
               validarTipo=resultado.getString("Tipos");
               validarEstado=resultado.getString("Estado");
               validarDireccion = resultado.getString("Direccion");
               validarUser=resultado.getString("IDUser");
               if(validarEstado.equals("ACCIDENTADO")){
                   jComboBox1.addItem(validarId);
               }
         }
        
       }catch(Exception e){      
       }
    }
    
    public void listaVista2(String validarHora,String validarTransporte,String Estado,String Paquete) {
        this.tabla.setModel(modelo);
            info[0] = validarHora;
            info[1] = validarTransporte;
            info[2] = Estado;
            info[3] = Paquete;
            //SE LE AGREGA LA FILA A LA TABLA
            modelo.addRow(info);    
    } 
    public void llenarVista2(ResultSet resultado){
        String validarHora="";
        String validarTransporte="";
        String Estado="";
        String Paquete="";
        
        String defHora="";
        String defTransporte="";
        String defEstado="";
        String defPaquete="";
        
            modelo = new DefaultTableModel();
            modelo.addColumn("Hora");
            modelo.addColumn("ID_Transporte");
            modelo.addColumn("Estado");
            modelo.addColumn("ID_Paquete");
             try {
            //Extraer los datos SQL
            int anterior =0;
            int nuevo=0;
            int res=0;
            while(resultado.next()){
               validarHora = resultado.getString("HoraEntregado");     
               validarTransporte = resultado.getString("ID_Transporte");
               Estado = resultado.getString("Estado");
               Paquete = resultado.getString("IDPaquete");
               
               nuevo=Integer.parseInt(validarHora);
               res=Mayor(anterior,nuevo);
               if(nuevo==res){
                    defHora=validarHora;
                    defTransporte=validarTransporte;
                    defEstado=Estado;
                    defPaquete=Paquete;
               }
               anterior=nuevo;
             }
            listaVista2(defHora,defTransporte,defEstado,defPaquete);
        }catch (Exception ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public int Mayor(int a, int b){
        if(a>b){
            return a;
        }else{
            return b;
        }
    }
    /**
     * @param args the command line arguments
     */
    
   
        
        // tamanoseria la cantidad de filas que tiene la tabla
        
       
                
            
        
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ACCIDENTE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ACCIDENTE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ACCIDENTE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ACCIDENTE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ACCIDENTE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboCon;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
